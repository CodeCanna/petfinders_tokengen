#!/bin/bash

# Define our variables
OUTPUT_DIR=/home/$USER/Documents;

# Check that jq is installed
function jq_is_installed {
    if ! jq --version > /dev/null; then
        return 1;
    fi
    return 0;
}

function print_help {
    echo '-- Usage --';
    echo '-i = Client ID also this is also referred to as the API key.';
    echo '-s = This is the secret that has to be pass with the api key to generate a token.';
    echo '-h = Prints this help message';
    echo '';
    echo '     ## Generate a token ##     ';
    echo 'EAMPLE: ./gentoken -i [API Key] -s [Secret]';
}

# Check our arguments
if [ $# -eq 0 ]; then
    echo "Not enough arguments supplied.";
    print_help;
    exit 3;
elif [ $# -gt 4 ]; then
    echo "Too many arguments supplied"
    print_help;
    exit 3;
fi

# Define the opt string to loop through with getopts
optstring=":hi:s:";

# Parse our arguments with getopts
while getopts ${optstring} args; do
    case "${args}" in
        i)
            id="${OPTARG}";
        ;;
        s)
            secret="${OPTARG}";
        ;;
        h)
            print_help;
            exit 0;
        ;;
        ?)
            echo "Invlid option: - ${OPTARG}";
            print_help;
            exit 1;
        ;;
    esac
done

# Generate the token, then store it in a file.  Display the file, then exit.
curl -d "grant_type=client_credentials&client_id=$id&client_secret=$secret" 'https://api.petfinder.com/v2/oauth2/token' > "$OUTPUT_DIR/token.json";

# Cat out token.json piping it through jq if it's installed
if jq_is_installed; then
    cat "$OUTPUT_DIR/token.json" | jq;
else
    cat "$OUTPUT_DIR/token.json";
    echo 'Consider installing jq (https://github.com/stedolan/jq) to get prettier JSON output';
fi

exit 0;